import * as axios from 'axios';
import { AxiosRequestConfig, AxiosInstance, AxiosPromise } from 'axios';

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
interface ConfigurationParameters {
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    username?: string;
    password?: string;
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    basePath?: string;
    serverIndex?: number;
    baseOptions?: any;
    formDataCtor?: new () => any;
}
declare class Configuration {
    /**
     * parameter for apiKey security
     * @param name security name
     * @memberof Configuration
     */
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    username?: string;
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    password?: string;
    /**
     * parameter for oauth2 security
     * @param name security name
     * @param scopes oauth2 scope
     * @memberof Configuration
     */
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    /**
     * override base path
     *
     * @type {string}
     * @memberof Configuration
     */
    basePath?: string;
    /**
     * override server index
     *
     * @type {number}
     * @memberof Configuration
     */
    serverIndex?: number;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    baseOptions?: any;
    /**
     * The FormData constructor that will be used to create multipart form data
     * requests. You can inject this here so that execution environments that
     * do not support the FormData class can still run the generated client.
     *
     * @type {new () => FormData}
     */
    formDataCtor?: new () => any;
    constructor(param?: ConfigurationParameters);
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    isJsonMime(mime: string): boolean;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RequestArgs
 */
interface RequestArgs {
    url: string;
    options: AxiosRequestConfig;
}
/**
 *
 * @export
 * @class BaseAPI
 */
declare class BaseAPI {
    protected basePath: string;
    protected axios: AxiosInstance;
    protected configuration: Configuration | undefined;
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AccelerateTransactionForDeveloperRequest
 */
interface AccelerateTransactionForDeveloperRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof AccelerateTransactionForDeveloperRequest
     */
    'idempotencyKey': string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof AccelerateTransactionForDeveloperRequest
     */
    'entitySecretCiphertext': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AccelerateTransactionForDeveloperResponse
 */
interface AccelerateTransactionForDeveloperResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof AccelerateTransactionForDeveloperResponse
     */
    'id'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * An Account can be a Smart Contract Account (SCA) or an Externally Owned Account (EOA). To learn more about account types and the differences between the two, see the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types).  If an account type is not specified during the creation of a wallet, it will default to `EOA` (Externally Owned Account).
 * @export
 * @enum {string}
 */
declare const AccountType: {
    readonly Sca: "SCA";
    readonly Eoa: "EOA";
};
type AccountType = typeof AccountType[keyof typeof AccountType];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The blockchain network the resource will be created on or is currently on.
 * @export
 * @enum {string}
 */
declare const Blockchain: {
    readonly EthGoerli: "ETH-GOERLI";
    readonly EthSepolia: "ETH-SEPOLIA";
    readonly Eth: "ETH";
    readonly AvaxFuji: "AVAX-FUJI";
    readonly Avax: "AVAX";
    readonly MaticMumbai: "MATIC-MUMBAI";
    readonly Matic: "MATIC";
};
type Blockchain = typeof Blockchain[keyof typeof Blockchain];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
declare const TokenStandard: {
    readonly Erc20: "ERC20";
    readonly Erc721: "ERC721";
    readonly Erc1155: "ERC1155";
};
type TokenStandard = typeof TokenStandard[keyof typeof TokenStandard];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TokenResponse
 */
interface TokenResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof TokenResponse
     */
    'id': string;
    /**
     * Blockchain name of the specified token.
     * @type {string}
     * @memberof TokenResponse
     */
    'name'?: string;
    /**
     *
     * @type {TokenStandard}
     * @memberof TokenResponse
     */
    'standard'?: TokenStandard;
    /**
     *
     * @type {Blockchain}
     * @memberof TokenResponse
     */
    'blockchain': Blockchain;
    /**
     * Number of decimal places shown in the token amount.
     * @type {number}
     * @memberof TokenResponse
     */
    'decimals'?: number;
    /**
     * Defines if the token is a native token of the specified blockchain. If TRUE, the token is a native token.
     * @type {boolean}
     * @memberof TokenResponse
     */
    'isNative': boolean;
    /**
     * Blockchain symbol of the specified token.
     * @type {string}
     * @memberof TokenResponse
     */
    'symbol'?: string;
    /**
     * Blockchain address of the specified token.
     * @type {string}
     * @memberof TokenResponse
     */
    'tokenAddress'?: string;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof TokenResponse
     */
    'updateDate': string;
    /**
     * Date and time the resource was created. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof TokenResponse
     */
    'createDate': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Balance
 */
interface Balance {
    /**
     * List of token balances for each token on the wallet(s).
     * @type {string}
     * @memberof Balance
     */
    'amount': string;
    /**
     *
     * @type {TokenResponse}
     * @memberof Balance
     */
    'token': TokenResponse;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof Balance
     */
    'updateDate': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CancelTransactionForDeveloperRequest
 */
interface CancelTransactionForDeveloperRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof CancelTransactionForDeveloperRequest
     */
    'idempotencyKey': string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof CancelTransactionForDeveloperRequest
     */
    'entitySecretCiphertext': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Current state of the transaction.
 * @export
 * @enum {string}
 */
declare const TransactionState: {
    readonly Initiated: "INITIATED";
    readonly PendingRiskScreening: "PENDING_RISK_SCREENING";
    readonly Denied: "DENIED";
    readonly Queued: "QUEUED";
    readonly Sent: "SENT";
    readonly Confirmed: "CONFIRMED";
    readonly Complete: "COMPLETE";
    readonly Failed: "FAILED";
    readonly Cancelled: "CANCELLED";
};
type TransactionState = typeof TransactionState[keyof typeof TransactionState];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CancelTransactionForDeveloperResponse
 */
interface CancelTransactionForDeveloperResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof CancelTransactionForDeveloperResponse
     */
    'id': string;
    /**
     *
     * @type {TransactionState}
     * @memberof CancelTransactionForDeveloperResponse
     */
    'state': TransactionState;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A dynamic blockchain fee level setting (`LOW`, `MEDIUM`, or `HIGH`) that will be used to pay gas for the transaction. Calculated based on network traffic, supply of validators, and demand for transaction verification. Cannot be used with `gasLimit`, `gasPrice`, `baseFee`, `priorityFee`, or `maxFee`. Estimates for each fee level can be obtained through the Estimate fee API call.
 * @export
 * @enum {string}
 */
declare const FeeLevel: {
    readonly Low: "LOW";
    readonly Medium: "MEDIUM";
    readonly High: "HIGH";
};
type FeeLevel = typeof FeeLevel[keyof typeof FeeLevel];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateContractExecutionTransactionForDeveloperRequest
 */
interface CreateContractExecutionTransactionForDeveloperRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'idempotencyKey': string;
    /**
     * The contract ABI function signature or `callData` field is required for interacting with the smart contract. The ABI function signature cannot be used simultaneously with `callData`. e.g. burn(uint256)
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'abiFunctionSignature'?: string;
    /**
     * The contract ABI function signature parameters for executing the contract interaction. Supported parameter types include string, integer, boolean, and array. These parameters should be used exclusively with the abiFunctionSignature and cannot be used with `callData`.
     * @type {Array<string>}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'abiParameters'?: Array<string>;
    /**
     * The raw transaction data, must be an even-length hexadecimal string with the `0x` prefix, to be executed. It is important to note that the usage of `callData` is mutually exclusive with the `abiFunctionSignature` and `abiParameters`. Therefore, `callData` cannot be utilized simultaneously with either `abiFunctionSignature` or `abiParameters`.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'callData'?: string;
    /**
     * The amount of native token that will be sent to the contract abi execution. Optional field for payable api only, if not provided, no native token will be sent.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'amount'?: string;
    /**
     * The blockchain address of the contract to be executed.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'contractAddress': string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'entitySecretCiphertext': string;
    /**
     *
     * @type {FeeLevel}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'feeLevel'?: FeeLevel;
    /**
     * The maximum units of gas to be used for the transaction. Required if `feeLevel` is not provided. Estimates for this limit can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'gasLimit'?: string;
    /**
     * For blockchains with EIP-1559 support, the maximum price of gas, in gwei, to be used per each unit of gas (see `gasLimit`). Requires `gasLimit`. Cannot be used with `feeLevel`, `baseFee`, `priorityFee`, or `maxFee`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'gasPrice'?: string;
    /**
     * The maximum price per unit of gas (see `gasLimit`), in gwei. Requires `baseFee`, `priorityFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'maxFee'?: string;
    /**
     * The “tip”, in gwei, to be added to the baseFee as an incentive for validators. Requires `baseFee`, `maxFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'priorityFee'?: string;
    /**
     * Optional reference or description used to identify the transaction.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'refId'?: string;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperRequest
     */
    'walletId': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateContractExecutionTransactionForDeveloperResponse
 */
interface CreateContractExecutionTransactionForDeveloperResponse {
    /**
     * Unique system generated identifier of the transaction.
     * @type {string}
     * @memberof CreateContractExecutionTransactionForDeveloperResponse
     */
    'id': string;
    /**
     *
     * @type {TransactionState}
     * @memberof CreateContractExecutionTransactionForDeveloperResponse
     */
    'state': TransactionState;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperTransactionAccelerate200Response
 */
interface CreateDeveloperTransactionAccelerate200Response {
    /**
     *
     * @type {AccelerateTransactionForDeveloperResponse}
     * @memberof CreateDeveloperTransactionAccelerate200Response
     */
    'data'?: AccelerateTransactionForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperTransactionCancel200Response
 */
interface CreateDeveloperTransactionCancel200Response {
    /**
     *
     * @type {CancelTransactionForDeveloperResponse}
     * @memberof CreateDeveloperTransactionCancel200Response
     */
    'data'?: CancelTransactionForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperTransactionContractExecution200Response
 */
interface CreateDeveloperTransactionContractExecution200Response {
    /**
     *
     * @type {CreateContractExecutionTransactionForDeveloperResponse}
     * @memberof CreateDeveloperTransactionContractExecution200Response
     */
    'data'?: CreateContractExecutionTransactionForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateTransferTransactionForDeveloperResponse
 */
interface CreateTransferTransactionForDeveloperResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperResponse
     */
    'id': string;
    /**
     *
     * @type {TransactionState}
     * @memberof CreateTransferTransactionForDeveloperResponse
     */
    'state': TransactionState;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperTransactionTransfer200Response
 */
interface CreateDeveloperTransactionTransfer200Response {
    /**
     *
     * @type {CreateTransferTransactionForDeveloperResponse}
     * @memberof CreateDeveloperTransactionTransfer200Response
     */
    'data'?: CreateTransferTransactionForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
declare const CustodyType: {
    readonly Developer: "DEVELOPER";
    readonly Enduser: "ENDUSER";
};
type CustodyType = typeof CustodyType[keyof typeof CustodyType];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
declare const WalletState: {
    readonly Live: "LIVE";
    readonly Frozen: "FROZEN";
};
type WalletState = typeof WalletState[keyof typeof WalletState];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface WalletResponse
 */
interface WalletResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof WalletResponse
     */
    'id': string;
    /**
     * The blockchain address generated upon wallet creation.
     * @type {string}
     * @memberof WalletResponse
     */
    'address': string;
    /**
     *
     * @type {Blockchain}
     * @memberof WalletResponse
     */
    'blockchain': Blockchain;
    /**
     * Date and time the resource was created. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof WalletResponse
     */
    'createDate': string;
    /**
     *
     * @type {CustodyType}
     * @memberof WalletResponse
     */
    'custodyType': CustodyType;
    /**
     *
     * @type {AccountType}
     * @memberof WalletResponse
     */
    'accountType'?: AccountType;
    /**
     * Name or description associated with the wallet.
     * @type {string}
     * @memberof WalletResponse
     */
    'name'?: string;
    /**
     * Optional reference or description used to identify the wallet.
     * @type {string}
     * @memberof WalletResponse
     */
    'refId'?: string;
    /**
     *
     * @type {WalletState}
     * @memberof WalletResponse
     */
    'state': WalletState;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof WalletResponse
     */
    'updateDate': string;
    /**
     * Unique system generated identifier for the user.
     * @type {string}
     * @memberof WalletResponse
     */
    'userId'?: string;
    /**
     * Unique system generated identifier of the wallet\'s parent wallet set. under.
     * @type {string}
     * @memberof WalletResponse
     */
    'walletSetId': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperWalletResponse
 */
interface CreateDeveloperWalletResponse {
    /**
     * Lists the details for the created wallets.
     * @type {Array<WalletResponse>}
     * @memberof CreateDeveloperWalletResponse
     */
    'wallets'?: Array<WalletResponse>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperWallet200Response
 */
interface CreateDeveloperWallet200Response {
    /**
     *
     * @type {CreateDeveloperWalletResponse}
     * @memberof CreateDeveloperWallet200Response
     */
    'data'?: CreateDeveloperWalletResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface WalletMetadata
 */
interface WalletMetadata {
    /**
     * Name or description associated with the wallet.
     * @type {string}
     * @memberof WalletMetadata
     */
    'name'?: string;
    /**
     * Optional reference or description used to identify the transaction.
     * @type {string}
     * @memberof WalletMetadata
     */
    'refId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperWalletRequest
 */
interface CreateDeveloperWalletRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof CreateDeveloperWalletRequest
     */
    'idempotencyKey': string;
    /**
     *
     * @type {AccountType}
     * @memberof CreateDeveloperWalletRequest
     */
    'accountType'?: AccountType;
    /**
     * Blockchain(s) the requested wallets will be created on.
     * @type {Array<Blockchain>}
     * @memberof CreateDeveloperWalletRequest
     */
    'blockchains': Array<Blockchain>;
    /**
     * Number of wallets that will be created per specified blockchain.
     * @type {number}
     * @memberof CreateDeveloperWalletRequest
     */
    'count'?: number;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof CreateDeveloperWalletRequest
     */
    'entitySecretCiphertext': string;
    /**
     * List of metadata fields to associate with the corresponding wallet. If count is specified, the amount of items in the array should match the count field.
     * @type {Array<WalletMetadata>}
     * @memberof CreateDeveloperWalletRequest
     */
    'metadata'?: Array<WalletMetadata>;
    /**
     * Unique system generated identifier of the wallet\'s parent wallet set. under.
     * @type {string}
     * @memberof CreateDeveloperWalletRequest
     */
    'walletSetId': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateDeveloperWalletSetRequest
 */
interface CreateDeveloperWalletSetRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof CreateDeveloperWalletSetRequest
     */
    'idempotencyKey': string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof CreateDeveloperWalletSetRequest
     */
    'entitySecretCiphertext': string;
    /**
     *
     * @type {string}
     * @memberof CreateDeveloperWalletSetRequest
     */
    'name'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface WalletSetResponse
 */
interface WalletSetResponse {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof WalletSetResponse
     */
    'id': string;
    /**
     * Date and time the resource was created. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof WalletSetResponse
     */
    'createDate': string;
    /**
     *
     * @type {CustodyType}
     * @memberof WalletSetResponse
     */
    'custodyType': CustodyType;
    /**
     * Name or description of the wallet set.
     * @type {string}
     * @memberof WalletSetResponse
     */
    'name'?: string;
    /**
     * Last update date of the wallet set. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof WalletSetResponse
     */
    'updateDate': string;
    /**
     * Unique system generated identifier for the user.
     * @type {string}
     * @memberof WalletSetResponse
     */
    'userId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDeveloperWalletSetResponse
 */
interface CreateDeveloperWalletSetResponse {
    /**
     *
     * @type {WalletSetResponse}
     * @memberof CreateDeveloperWalletSetResponse
     */
    'walletSet'?: WalletSetResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface EstimatedTransactionFee
 */
interface EstimatedTransactionFee {
    /**
     * The base price per unit of gas (see `gasLimit`), in gwei, required to execute the transaction. Determined by the blockchain protocol. Requires `priorityFee`, `maxFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof EstimatedTransactionFee
     */
    'baseFee'?: string;
    /**
     * The maximum units of gas to be used for the transaction. Required if `feeLevel` is not provided. Estimates for this limit can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof EstimatedTransactionFee
     */
    'gasLimit'?: string;
    /**
     * For blockchains with EIP-1559 support, the maximum price of gas, in gwei, to be used per each unit of gas (see `gasLimit`). Requires `gasLimit`. Cannot be used with `feeLevel`, `baseFee`, `priorityFee`, or `maxFee`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof EstimatedTransactionFee
     */
    'gasPrice'?: string;
    /**
     * The maximum price per unit of gas (see `gasLimit`), in gwei. Requires `baseFee`, `priorityFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof EstimatedTransactionFee
     */
    'maxFee'?: string;
    /**
     * The “tip”, in gwei, to be added to the baseFee as an incentive for validators. Requires `baseFee`, `maxFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof EstimatedTransactionFee
     */
    'priorityFee'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface EstimateTransactionFeeResponse
 */
interface EstimateTransactionFeeResponse {
    /**
     *
     * @type {EstimatedTransactionFee}
     * @memberof EstimateTransactionFeeResponse
     */
    'high'?: EstimatedTransactionFee;
    /**
     *
     * @type {EstimatedTransactionFee}
     * @memberof EstimateTransactionFeeResponse
     */
    'low'?: EstimatedTransactionFee;
    /**
     *
     * @type {EstimatedTransactionFee}
     * @memberof EstimateTransactionFeeResponse
     */
    'medium'?: EstimatedTransactionFee;
    /**
     * One of ERC-4337 gas fields. The amount of gas to allocate for the main execution call. Only in smart contract account estimation response.
     * @type {string}
     * @memberof EstimateTransactionFeeResponse
     */
    'callGasLimit'?: string;
    /**
     * One of ERC-4337 gas fields. The amount of gas to allocate for the verification step. Only in smart contract account estimation response.
     * @type {string}
     * @memberof EstimateTransactionFeeResponse
     */
    'verificationGasLimit'?: string;
    /**
     * One of ERC-4337 gas fields. The amount of gas to pay to compensate the bundler for pre-verification execution and call data. Only in smart contract account estimation response.
     * @type {string}
     * @memberof EstimateTransactionFeeResponse
     */
    'preVerificationGas'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateTransferEstimateFee200Response
 */
interface CreateTransferEstimateFee200Response {
    /**
     *
     * @type {EstimateTransactionFeeResponse}
     * @memberof CreateTransferEstimateFee200Response
     */
    'data'?: EstimateTransactionFeeResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateTransferTransactionForDeveloperRequest
 */
interface CreateTransferTransactionForDeveloperRequest {
    /**
     * Universally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests. To create a UUIDv4 go to [uuidgenerator.net](https://www.uuidgenerator.net).
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'idempotencyKey': string;
    /**
     * Transfer amount in decimal number format.
     * @type {Array<string>}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'amounts'?: Array<string>;
    /**
     * The destination blockchain address for the transaction.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'destinationAddress': string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'entitySecretCiphertext': string;
    /**
     *
     * @type {FeeLevel}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'feeLevel'?: FeeLevel;
    /**
     * The maximum units of gas to be used for the transaction. Required if `feeLevel` is not provided. Estimates for this limit can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'gasLimit'?: string;
    /**
     * For blockchains with EIP-1559 support, the maximum price of gas, in gwei, to be used per each unit of gas (see `gasLimit`). Requires `gasLimit`. Cannot be used with `feeLevel`, `baseFee`, `priorityFee`, or `maxFee`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'gasPrice'?: string;
    /**
     * The maximum price per unit of gas (see `gasLimit`), in gwei. Requires `baseFee`, `priorityFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'maxFee'?: string;
    /**
     * The “tip”, in gwei, to be added to the baseFee as an incentive for validators. Requires `baseFee`, `maxFee`, and `gasLimit` to be present. Cannot be used with `feeLevel` or `gasPrice`. Estimates for this fee can be obtained through the estimate fee API call.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'priorityFee'?: string;
    /**
     * NftTokenIDs specify the nft ID list to be transferred/batchTransferred for NFT withdrawal. Note. Only erc1155 supports safeBatchTransferFrom.
     * @type {Array<string>}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'nftTokenIds'?: Array<string>;
    /**
     * Optional reference or description used to identify the transaction.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'refId'?: string;
    /**
     * The unique system generated identifier associated with the token.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'tokenId': string;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof CreateTransferTransactionForDeveloperRequest
     */
    'walletId': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ValidateAddressResponse
 */
interface ValidateAddressResponse {
    /**
     *
     * @type {boolean}
     * @memberof ValidateAddressResponse
     */
    'isValid': boolean;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateValidateAddress200Response
 */
interface CreateValidateAddress200Response {
    /**
     *
     * @type {ValidateAddressResponse}
     * @memberof CreateValidateAddress200Response
     */
    'data'?: ValidateAddressResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateWalletSet200Response
 */
interface CreateWalletSet200Response {
    /**
     *
     * @type {CreateDeveloperWalletSetResponse}
     * @memberof CreateWalletSet200Response
     */
    'data'?: CreateDeveloperWalletSetResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface EstimateContractExecutionTransactionFeeRequest
 */
interface EstimateContractExecutionTransactionFeeRequest {
    /**
     * The contract ABI function signature or `callData` field is required for interacting with the smart contract. The ABI function signature cannot be used simultaneously with `callData`. e.g. burn(uint256)
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'abiFunctionSignature': string;
    /**
     * The contract ABI function signature parameters for executing the contract interaction. Supported parameter types include string, integer, boolean, and array. These parameters should be used exclusively with the abiFunctionSignature and cannot be used with `callData`.
     * @type {Array<string>}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'abiParameters'?: Array<string>;
    /**
     * The raw transaction data, must be an even-length hexadecimal string with the `0x` prefix, to be executed. It is important to note that the usage of `callData` is mutually exclusive with the `abiFunctionSignature` and `abiParameters`. Therefore, `callData` cannot be utilized simultaneously with either `abiFunctionSignature` or `abiParameters`.
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'callData'?: string;
    /**
     * The amount of native token that will be sent to the contract abi execution. Optional field for payable api only, if not provided, no native token will be sent.
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'amount'?: string;
    /**
     *
     * @type {Blockchain}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'blockchain'?: Blockchain;
    /**
     * The blockchain address of the contract to be executed.
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'contractAddress': string;
    /**
     * The source blockchain address of the transaction.
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'sourceAddress'?: string;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof EstimateContractExecutionTransactionFeeRequest
     */
    'walletId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface EstimateTransferTransactionFeeRequest
 */
interface EstimateTransferTransactionFeeRequest {
    /**
     * Transfer amount in decimal number format.
     * @type {Array<string>}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'amounts': Array<string>;
    /**
     * The destination blockchain address for the transaction.
     * @type {string}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'destinationAddress': string;
    /**
     * List of NFT token ids corresponding with the NFTs to be transferred. Batch transfers are only supported for ERC-1155 tokens.
     * @type {Array<string>}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'nftTokenIds'?: Array<string>;
    /**
     * The source blockchain address of the transaction.
     * @type {string}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'sourceAddress'?: string;
    /**
     * System generated identifier of the token.
     * @type {string}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'tokenId': string;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof EstimateTransferTransactionFeeRequest
     */
    'walletId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ExtGetAllWalletsResponse
 */
interface ExtGetAllWalletsResponse {
    /**
     *
     * @type {Array<WalletResponse>}
     * @memberof ExtGetAllWalletsResponse
     */
    'wallets'?: Array<WalletResponse>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ExtGetWalletByIDResponse
 */
interface ExtGetWalletByIDResponse {
    /**
     *
     * @type {WalletResponse}
     * @memberof ExtGetWalletByIDResponse
     */
    'wallet'?: WalletResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ExtUpdateWalletMetadataRequest
 */
interface ExtUpdateWalletMetadataRequest {
    /**
     *
     * @type {string}
     * @memberof ExtUpdateWalletMetadataRequest
     */
    'name'?: string;
    /**
     * Optional reference or description used to identify the wallet.
     * @type {string}
     * @memberof ExtUpdateWalletMetadataRequest
     */
    'refId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ExtWalletResponseWallet
 */
interface ExtWalletResponseWallet {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'id'?: string;
    /**
     * The blockchain address generated upon wallet creation.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'address'?: string;
    /**
     *
     * @type {Blockchain}
     * @memberof ExtWalletResponseWallet
     */
    'blockchain'?: Blockchain;
    /**
     * Date and time the resource was created. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'createDate'?: string;
    /**
     *
     * @type {CustodyType}
     * @memberof ExtWalletResponseWallet
     */
    'custodyType'?: CustodyType;
    /**
     *
     * @type {AccountType}
     * @memberof ExtWalletResponseWallet
     */
    'accountType'?: AccountType;
    /**
     * Name or description associated with the wallet.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'name'?: string;
    /**
     * Optional reference or description used to identify the wallet.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'refId'?: string;
    /**
     *
     * @type {WalletState}
     * @memberof ExtWalletResponseWallet
     */
    'state'?: WalletState;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'updateDate'?: string;
    /**
     * Unique system generated identifier for the user.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'userId'?: string;
    /**
     * Unique system generated identifier of the wallet\'s parent wallet set. under.
     * @type {string}
     * @memberof ExtWalletResponseWallet
     */
    'walletSetId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ExtWalletResponse
 */
interface ExtWalletResponse {
    /**
     *
     * @type {ExtWalletResponseWallet}
     * @memberof ExtWalletResponse
     */
    'wallet'?: ExtWalletResponseWallet;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetBalancesResponse
 */
interface GetBalancesResponse {
    /**
     * List of token balances for each token on the wallet(s).
     * @type {Array<Balance>}
     * @memberof GetBalancesResponse
     */
    'tokenBalances'?: Array<Balance>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Nft
 */
interface Nft {
    /**
     * Amount of NFTs on a wallet. For non-fungible token standards, like ERC721, amount will always be “1”; for semi-fungible token standards like ERC1155, amount will correspond to the number of tokens.
     * @type {string}
     * @memberof Nft
     */
    'amount': string;
    /**
     * The metadata of the NFT.
     * @type {string}
     * @memberof Nft
     */
    'metadata'?: string;
    /**
     * The NFT token ID.
     * @type {string}
     * @memberof Nft
     */
    'nftTokenId': string;
    /**
     *
     * @type {TokenResponse}
     * @memberof Nft
     */
    'token': TokenResponse;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof Nft
     */
    'updateDate': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetNftsResponse
 */
interface GetNftsResponse {
    /**
     *
     * @type {Array<Nft>}
     * @memberof GetNftsResponse
     */
    'nfts'?: Array<Nft>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetTokenByIDResponse
 */
interface GetTokenByIDResponse {
    /**
     *
     * @type {TokenResponse}
     * @memberof GetTokenByIDResponse
     */
    'token'?: TokenResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetTokenId200Response
 */
interface GetTokenId200Response {
    /**
     *
     * @type {GetTokenByIDResponse}
     * @memberof GetTokenId200Response
     */
    'data'?: GetTokenByIDResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Operation type of the transaction.
 * @export
 * @enum {string}
 */
declare const Operation: {
    readonly Transfer: "TRANSFER";
    readonly ContractExecution: "CONTRACT_EXECUTION";
    readonly ContractDeployment: "CONTRACT_DEPLOYMENT";
};
type Operation = typeof Operation[keyof typeof Operation];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
declare const TransactionType: {
    readonly Inbound: "INBOUND";
    readonly Outbound: "OUTBOUND";
};
type TransactionType = typeof TransactionType[keyof typeof TransactionType];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Transaction
 */
interface Transaction {
    /**
     * Unique system generated identifier of the resource.
     * @type {string}
     * @memberof Transaction
     */
    'id': string;
    /**
     * The contract ABI function signature or `callData` field is required for interacting with the smart contract. The ABI function signature cannot be used simultaneously with `callData`. e.g. burn(uint256)
     * @type {string}
     * @memberof Transaction
     */
    'abiFunctionSignature'?: string;
    /**
     * The contract ABI function signature parameters for executing the contract interaction. Supported parameter types include string, integer, boolean, and array. These parameters should be used exclusively with the abiFunctionSignature and cannot be used with `callData`.
     * @type {Array<string>}
     * @memberof Transaction
     */
    'abiParameters'?: Array<string>;
    /**
     * Transfer amount in decimal number format.
     * @type {Array<string>}
     * @memberof Transaction
     */
    'amounts'?: Array<string>;
    /**
     * Transaction amount in USD decimal format.
     * @type {string}
     * @memberof Transaction
     */
    'amountInUSD'?: string;
    /**
     * Identifier for the block that includes the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'blockHash'?: string;
    /**
     * Block height of the transaction, representing the number of blockchain confirmations.
     * @type {number}
     * @memberof Transaction
     */
    'blockHeight'?: number;
    /**
     *
     * @type {Blockchain}
     * @memberof Transaction
     */
    'blockchain': Blockchain;
    /**
     * The blockchain address of the contract to be executed.
     * @type {string}
     * @memberof Transaction
     */
    'contractAddress'?: string;
    /**
     * Date and time the resource was created. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof Transaction
     */
    'createDate': string;
    /**
     *
     * @type {CustodyType}
     * @memberof Transaction
     */
    'custodyType'?: CustodyType;
    /**
     * The destination blockchain address for the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'destinationAddress'?: string;
    /**
     * Description of the error. Only present for transactions in `FAILED` state.
     * @type {string}
     * @memberof Transaction
     */
    'errorReason'?: string;
    /**
     *
     * @type {EstimatedTransactionFee}
     * @memberof Transaction
     */
    'estimatedFee'?: EstimatedTransactionFee;
    /**
     *
     * @type {FeeLevel}
     * @memberof Transaction
     */
    'feeLevel'?: FeeLevel;
    /**
     * Date the transaction was first confirmed in a block. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof Transaction
     */
    'firstConfirmDate'?: string;
    /**
     * Gas fee, in native token, paid to the network for the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'networkFee'?: string;
    /**
     * Gas fee, in USD, paid to the network for the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'networkFeeInUSD'?: string;
    /**
     * List of Nfts, in JSON string format, associated with the transaction.
     * @type {Array<string>}
     * @memberof Transaction
     */
    'nfts'?: Array<string>;
    /**
     *
     * @type {Operation}
     * @memberof Transaction
     */
    'operation'?: Operation;
    /**
     * Optional reference or description used to identify the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'refId'?: string;
    /**
     * The source blockchain address of the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'sourceAddress'?: string;
    /**
     *
     * @type {TransactionState}
     * @memberof Transaction
     */
    'state': TransactionState;
    /**
     * System generated identifier of the token.
     * @type {string}
     * @memberof Transaction
     */
    'tokenId'?: string;
    /**
     *
     * @type {TransactionType}
     * @memberof Transaction
     */
    'transactionType': TransactionType;
    /**
     * Blockchain generated identifier of the transaction.
     * @type {string}
     * @memberof Transaction
     */
    'txHash'?: string;
    /**
     * Last update date of the resource. ISO-8601 UTC date/time.
     * @type {string}
     * @memberof Transaction
     */
    'updateDate': string;
    /**
     * Unique system generated identifier for the user.
     * @type {string}
     * @memberof Transaction
     */
    'userId'?: string;
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof Transaction
     */
    'walletId'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetTransactionByIDResponse
 */
interface GetTransactionByIDResponse {
    /**
     *
     * @type {Transaction}
     * @memberof GetTransactionByIDResponse
     */
    'transaction'?: Transaction;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetTransaction200Response
 */
interface GetTransaction200Response {
    /**
     *
     * @type {GetTransactionByIDResponse}
     * @memberof GetTransaction200Response
     */
    'data'?: GetTransactionByIDResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetTransactionsResponse
 */
interface GetTransactionsResponse {
    /**
     *
     * @type {Array<Transaction>}
     * @memberof GetTransactionsResponse
     */
    'transactions'?: Array<Transaction>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetWallet200Response
 */
interface GetWallet200Response {
    /**
     *
     * @type {ExtGetWalletByIDResponse}
     * @memberof GetWallet200Response
     */
    'data'?: ExtGetWalletByIDResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetWalletSetByIDResponse
 */
interface GetWalletSetByIDResponse {
    /**
     *
     * @type {WalletSetResponse}
     * @memberof GetWalletSetByIDResponse
     */
    'walletSet'?: WalletSetResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetWalletSet200Response
 */
interface GetWalletSet200Response {
    /**
     *
     * @type {GetWalletSetByIDResponse}
     * @memberof GetWalletSet200Response
     */
    'data'?: GetWalletSetByIDResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetWalletSetsResponse
 */
interface GetWalletSetsResponse {
    /**
     *
     * @type {Array<WalletSetResponse>}
     * @memberof GetWalletSetsResponse
     */
    'walletSets'?: Array<WalletSetResponse>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ListTransactions200Response
 */
interface ListTransactions200Response {
    /**
     *
     * @type {GetTransactionsResponse}
     * @memberof ListTransactions200Response
     */
    'data'?: GetTransactionsResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ListWalletBallance200Response
 */
interface ListWalletBallance200Response {
    /**
     *
     * @type {GetBalancesResponse}
     * @memberof ListWalletBallance200Response
     */
    'data'?: GetBalancesResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ListWalletNfts200Response
 */
interface ListWalletNfts200Response {
    /**
     *
     * @type {GetNftsResponse}
     * @memberof ListWalletNfts200Response
     */
    'data'?: GetNftsResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ListWalletSets200Response
 */
interface ListWalletSets200Response {
    /**
     *
     * @type {GetWalletSetsResponse}
     * @memberof ListWalletSets200Response
     */
    'data'?: GetWalletSetsResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ListWallets200Response
 */
interface ListWallets200Response {
    /**
     *
     * @type {ExtGetAllWalletsResponse}
     * @memberof ListWallets200Response
     */
    'data'?: ExtGetAllWalletsResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ModelError
 */
interface ModelError {
    /**
     * Code is the error code
     * @type {number}
     * @memberof ModelError
     */
    'code'?: number;
    /**
     * Message is the error message
     * @type {string}
     * @memberof ModelError
     */
    'message'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SignMessageForDeveloperResponse
 */
interface SignMessageForDeveloperResponse {
    /**
     * Signature is a hex encoded 65 byte array starting with 0x.
     * @type {string}
     * @memberof SignMessageForDeveloperResponse
     */
    'signature': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SignDeveloperMessage200Response
 */
interface SignDeveloperMessage200Response {
    /**
     *
     * @type {SignMessageForDeveloperResponse}
     * @memberof SignDeveloperMessage200Response
     */
    'data'?: SignMessageForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SignTypedDataForDeveloperResponse
 */
interface SignTypedDataForDeveloperResponse {
    /**
     * Signature is a hex encoded 65 byte array starting with 0x.
     * @type {string}
     * @memberof SignTypedDataForDeveloperResponse
     */
    'signature': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SignDeveloperTypedData200Response
 */
interface SignDeveloperTypedData200Response {
    /**
     *
     * @type {SignTypedDataForDeveloperResponse}
     * @memberof SignDeveloperTypedData200Response
     */
    'data'?: SignTypedDataForDeveloperResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SignMessageForDeveloperRequest
 */
interface SignMessageForDeveloperRequest {
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof SignMessageForDeveloperRequest
     */
    'walletId': string;
    /**
     * Indicator of whether the input message is encoded by hex. If TRUE, then the message should be a hex string. By default, it is False.
     * @type {boolean}
     * @memberof SignMessageForDeveloperRequest
     */
    'encodedByHex'?: boolean;
    /**
     * The user friendly message that needs to be signed. If it is a hex string, encodedByHex needs to be TRUE. The hex string should start with “0x” and have even length.
     * @type {string}
     * @memberof SignMessageForDeveloperRequest
     */
    'message': string;
    /**
     * The human readable explanation for this sign action. Useful for presenting with extra information.
     * @type {string}
     * @memberof SignMessageForDeveloperRequest
     */
    'memo'?: string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof SignMessageForDeveloperRequest
     */
    'entitySecretCiphertext': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SignTypedDataForDeveloperRequest
 */
interface SignTypedDataForDeveloperRequest {
    /**
     * Unique system generated identifier of the wallet. Required when source Address and blockchain is not provided. Mutually exclusive. For contract deploys this wallet ID will be used as the source.
     * @type {string}
     * @memberof SignTypedDataForDeveloperRequest
     */
    'walletId': string;
    /**
     * A string represents the typed structured data in EIP-712
     * @type {string}
     * @memberof SignTypedDataForDeveloperRequest
     */
    'data': string;
    /**
     * The human readable explanation for this sign action. Useful for presenting with extra information.
     * @type {string}
     * @memberof SignTypedDataForDeveloperRequest
     */
    'memo'?: string;
    /**
     * A base64 string expression of the entity secret ciphertext. The entity secret should be encrypted by the entity public key. Circle mandates that the entity secret ciphertext is unique for each API request.
     * @type {string}
     * @memberof SignTypedDataForDeveloperRequest
     */
    'entitySecretCiphertext': string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateWallet200Response
 */
interface UpdateWallet200Response {
    /**
     *
     * @type {ExtWalletResponse}
     * @memberof UpdateWallet200Response
     */
    'data'?: ExtWalletResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateWalletSetMetadataResponse
 */
interface UpdateWalletSetMetadataResponse {
    /**
     *
     * @type {WalletSetResponse}
     * @memberof UpdateWalletSetMetadataResponse
     */
    'walletSet'?: WalletSetResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateWalletSet200Response
 */
interface UpdateWalletSet200Response {
    /**
     *
     * @type {UpdateWalletSetMetadataResponse}
     * @memberof UpdateWalletSet200Response
     */
    'data'?: UpdateWalletSetMetadataResponse;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateWalletSetMetadataRequest
 */
interface UpdateWalletSetMetadataRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateWalletSetMetadataRequest
     */
    'name'?: string;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ValidateAddressRequest
 */
interface ValidateAddressRequest {
    /**
     * The blockchain address generated upon wallet creation.
     * @type {string}
     * @memberof ValidateAddressRequest
     */
    'address': string;
    /**
     *
     * @type {Blockchain}
     * @memberof ValidateAddressRequest
     */
    'blockchain': Blockchain;
}

/**
 * SigningApi - axios parameter creator
 * @export
 */
declare const SigningApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Sign the EIP-191 message from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign message
     * @param {SignMessageForDeveloperRequest} signMessageForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperMessage: (signMessageForDeveloperRequest: SignMessageForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Sign the EIP-712 typed structured data from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign typed data
     * @param {SignTypedDataForDeveloperRequest} signTypedDataForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperTypedData: (signTypedDataForDeveloperRequest: SignTypedDataForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SigningApi - functional programming interface
 * @export
 */
declare const SigningApiFp: (configuration?: Configuration) => {
    /**
     * Sign the EIP-191 message from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign message
     * @param {SignMessageForDeveloperRequest} signMessageForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperMessage(signMessageForDeveloperRequest: SignMessageForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SignDeveloperMessage200Response>>;
    /**
     * Sign the EIP-712 typed structured data from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign typed data
     * @param {SignTypedDataForDeveloperRequest} signTypedDataForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperTypedData(signTypedDataForDeveloperRequest: SignTypedDataForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SignDeveloperTypedData200Response>>;
};
/**
 * SigningApi - factory interface
 * @export
 */
declare const SigningApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Sign the EIP-191 message from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign message
     * @param {SignMessageForDeveloperRequest} signMessageForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperMessage(signMessageForDeveloperRequest: SignMessageForDeveloperRequest, options?: any): AxiosPromise<SignDeveloperMessage200Response>;
    /**
     * Sign the EIP-712 typed structured data from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign typed data
     * @param {SignTypedDataForDeveloperRequest} signTypedDataForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    signDeveloperTypedData(signTypedDataForDeveloperRequest: SignTypedDataForDeveloperRequest, options?: any): AxiosPromise<SignDeveloperTypedData200Response>;
};
/**
 * SigningApi - object-oriented interface
 * @export
 * @class SigningApi
 * @extends {BaseAPI}
 */
declare class SigningApi extends BaseAPI {
    /**
     * Sign the EIP-191 message from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign message
     * @param {SignMessageForDeveloperRequest} signMessageForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SigningApi
     */
    signDeveloperMessage(signMessageForDeveloperRequest: SignMessageForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<SignDeveloperMessage200Response, any>>;
    /**
     * Sign the EIP-712 typed structured data from a specified developer-controlled wallet. Please note that not all the Dapps currently support Smart Contract Account (SCA), the difference between EOA and SCA can be found in the [account types guide](https://developers.circle.com/w3s/docs/programmable-wallets-account-types), and you can check the list of Dapps that support SCA: https://eip1271.io/.
     * @summary Sign typed data
     * @param {SignTypedDataForDeveloperRequest} signTypedDataForDeveloperRequest Sign message for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SigningApi
     */
    signDeveloperTypedData(signTypedDataForDeveloperRequest: SignTypedDataForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<SignDeveloperTypedData200Response, any>>;
}

/**
 * TokenLookupApi - axios parameter creator
 * @export
 */
declare const TokenLookupApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetches details of a specific token given its unique identifier. Every token in your network of wallets has a UUID associated with it, regardless of whether it\'s already recognized or was added as a monitored token.
     * @summary Get token details
     * @param {string} id Token ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTokenId: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TokenLookupApi - functional programming interface
 * @export
 */
declare const TokenLookupApiFp: (configuration?: Configuration) => {
    /**
     * Fetches details of a specific token given its unique identifier. Every token in your network of wallets has a UUID associated with it, regardless of whether it\'s already recognized or was added as a monitored token.
     * @summary Get token details
     * @param {string} id Token ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTokenId(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTokenId200Response>>;
};
/**
 * TokenLookupApi - factory interface
 * @export
 */
declare const TokenLookupApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetches details of a specific token given its unique identifier. Every token in your network of wallets has a UUID associated with it, regardless of whether it\'s already recognized or was added as a monitored token.
     * @summary Get token details
     * @param {string} id Token ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTokenId(id: string, options?: any): AxiosPromise<GetTokenId200Response>;
};
/**
 * TokenLookupApi - object-oriented interface
 * @export
 * @class TokenLookupApi
 * @extends {BaseAPI}
 */
declare class TokenLookupApi extends BaseAPI {
    /**
     * Fetches details of a specific token given its unique identifier. Every token in your network of wallets has a UUID associated with it, regardless of whether it\'s already recognized or was added as a monitored token.
     * @summary Get token details
     * @param {string} id Token ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TokenLookupApi
     */
    getTokenId(id: string, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<GetTokenId200Response, any>>;
}

/**
 * TransactionsApi - axios parameter creator
 * @export
 */
declare const TransactionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Accelerates a specified on-chain digital asset transfer from a developer-controlled wallet. Additional gas fees may be incurred.
     * @summary Accelerate a transaction
     * @param {string} id Transaction ID
     * @param {AccelerateTransactionForDeveloperRequest} accelerateTransactionForDeveloperRequest Accelerate transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionAccelerate: (id: string, accelerateTransactionForDeveloperRequest: AccelerateTransactionForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Cancels a specified on-chain digital asset transfer from a developer-controlled wallet. Gas fees may still be incurred.
     * @summary Cancel a transaction
     * @param {string} id Transaction ID
     * @param {CancelTransactionForDeveloperRequest} cancelTransactionForDeveloperRequest Cancel transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionCancel: (id: string, cancelTransactionForDeveloperRequest: CancelTransactionForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates a transaction which executes a smart contract. ABI parameters must be passed in the request.
     * @summary Create a contract execution transaction
     * @param {CreateContractExecutionTransactionForDeveloperRequest} createContractExecutionTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionContractExecution: (createContractExecutionTransactionForDeveloperRequest: CreateContractExecutionTransactionForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Initiates an on-chain digital asset transfer from a specified developer-controlled wallet.
     * @summary Create a transfer transaction
     * @param {CreateTransferTransactionForDeveloperRequest} createTransferTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionTransfer: (createTransferTransactionForDeveloperRequest: CreateTransferTransactionForDeveloperRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Estimates gas fees that will be incurred for a contract execution transaction, given its ABI parameters and blockchain.
     * @summary Estimate fee for a contract execution transaction
     * @param {EstimateContractExecutionTransactionFeeRequest} estimateContractExecutionTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransactionEstimateFee: (estimateContractExecutionTransactionFeeRequest: EstimateContractExecutionTransactionFeeRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Estimates gas fees that will be incurred for a transfer transaction; given its amount, blockchain, and token.
     * @summary Estimate fee for a transfer transaction
     * @param {EstimateTransferTransactionFeeRequest} estimateTransferTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransferEstimateFee: (estimateTransferTransactionFeeRequest: EstimateTransferTransactionFeeRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Confirms that a specified address is valid for a given token on a certain blockchain.
     * @summary Validate an address
     * @param {ValidateAddressRequest} validateAddressRequest Validate address request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createValidateAddress: (validateAddressRequest: ValidateAddressRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves info for a single transaction using it\'s unique identifier.
     * @summary Get a transaction
     * @param {string} id Transaction id
     * @param {GetTransactionTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransaction: (id: string, txType?: GetTransactionTxTypeEnum, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Lists all transactions. Includes details such as status, source/destination, and transaction hash.
     * @summary List transactions
     * @param {ListTransactionsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {ListTransactionsCustodyTypeEnum} [custodyType] Filter by the custody type.
     * @param {string} [destinationAddress] Filter by the destination address.
     * @param {boolean} [includeAll]
     * @param {ListTransactionsOperationEnum} [operation] Filter by on the operation of the transaction.
     * @param {ListTransactionsStateEnum} [state] Filter by  the state of the transaction.
     * @param {string} [txHash] Filter on the transaction hash of the transaction.
     * @param {ListTransactionsTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {string} [walletIds] Filter by the wallet IDs of the transaction.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTransactions: (blockchain?: ListTransactionsBlockchainEnum, custodyType?: ListTransactionsCustodyTypeEnum, destinationAddress?: string, includeAll?: boolean, operation?: ListTransactionsOperationEnum, state?: ListTransactionsStateEnum, txHash?: string, txType?: ListTransactionsTxTypeEnum, walletIds?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TransactionsApi - functional programming interface
 * @export
 */
declare const TransactionsApiFp: (configuration?: Configuration) => {
    /**
     * Accelerates a specified on-chain digital asset transfer from a developer-controlled wallet. Additional gas fees may be incurred.
     * @summary Accelerate a transaction
     * @param {string} id Transaction ID
     * @param {AccelerateTransactionForDeveloperRequest} accelerateTransactionForDeveloperRequest Accelerate transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionAccelerate(id: string, accelerateTransactionForDeveloperRequest: AccelerateTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateDeveloperTransactionAccelerate200Response>>;
    /**
     * Cancels a specified on-chain digital asset transfer from a developer-controlled wallet. Gas fees may still be incurred.
     * @summary Cancel a transaction
     * @param {string} id Transaction ID
     * @param {CancelTransactionForDeveloperRequest} cancelTransactionForDeveloperRequest Cancel transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionCancel(id: string, cancelTransactionForDeveloperRequest: CancelTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateDeveloperTransactionCancel200Response>>;
    /**
     * Creates a transaction which executes a smart contract. ABI parameters must be passed in the request.
     * @summary Create a contract execution transaction
     * @param {CreateContractExecutionTransactionForDeveloperRequest} createContractExecutionTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionContractExecution(createContractExecutionTransactionForDeveloperRequest: CreateContractExecutionTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateDeveloperTransactionContractExecution200Response>>;
    /**
     * Initiates an on-chain digital asset transfer from a specified developer-controlled wallet.
     * @summary Create a transfer transaction
     * @param {CreateTransferTransactionForDeveloperRequest} createTransferTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionTransfer(createTransferTransactionForDeveloperRequest: CreateTransferTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateDeveloperTransactionTransfer200Response>>;
    /**
     * Estimates gas fees that will be incurred for a contract execution transaction, given its ABI parameters and blockchain.
     * @summary Estimate fee for a contract execution transaction
     * @param {EstimateContractExecutionTransactionFeeRequest} estimateContractExecutionTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransactionEstimateFee(estimateContractExecutionTransactionFeeRequest: EstimateContractExecutionTransactionFeeRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateTransferEstimateFee200Response>>;
    /**
     * Estimates gas fees that will be incurred for a transfer transaction; given its amount, blockchain, and token.
     * @summary Estimate fee for a transfer transaction
     * @param {EstimateTransferTransactionFeeRequest} estimateTransferTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransferEstimateFee(estimateTransferTransactionFeeRequest: EstimateTransferTransactionFeeRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateTransferEstimateFee200Response>>;
    /**
     * Confirms that a specified address is valid for a given token on a certain blockchain.
     * @summary Validate an address
     * @param {ValidateAddressRequest} validateAddressRequest Validate address request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createValidateAddress(validateAddressRequest: ValidateAddressRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateValidateAddress200Response>>;
    /**
     * Retrieves info for a single transaction using it\'s unique identifier.
     * @summary Get a transaction
     * @param {string} id Transaction id
     * @param {GetTransactionTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransaction(id: string, txType?: GetTransactionTxTypeEnum, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTransaction200Response>>;
    /**
     * Lists all transactions. Includes details such as status, source/destination, and transaction hash.
     * @summary List transactions
     * @param {ListTransactionsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {ListTransactionsCustodyTypeEnum} [custodyType] Filter by the custody type.
     * @param {string} [destinationAddress] Filter by the destination address.
     * @param {boolean} [includeAll]
     * @param {ListTransactionsOperationEnum} [operation] Filter by on the operation of the transaction.
     * @param {ListTransactionsStateEnum} [state] Filter by  the state of the transaction.
     * @param {string} [txHash] Filter on the transaction hash of the transaction.
     * @param {ListTransactionsTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {string} [walletIds] Filter by the wallet IDs of the transaction.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTransactions(blockchain?: ListTransactionsBlockchainEnum, custodyType?: ListTransactionsCustodyTypeEnum, destinationAddress?: string, includeAll?: boolean, operation?: ListTransactionsOperationEnum, state?: ListTransactionsStateEnum, txHash?: string, txType?: ListTransactionsTxTypeEnum, walletIds?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListTransactions200Response>>;
};
/**
 * TransactionsApi - factory interface
 * @export
 */
declare const TransactionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Accelerates a specified on-chain digital asset transfer from a developer-controlled wallet. Additional gas fees may be incurred.
     * @summary Accelerate a transaction
     * @param {string} id Transaction ID
     * @param {AccelerateTransactionForDeveloperRequest} accelerateTransactionForDeveloperRequest Accelerate transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionAccelerate(id: string, accelerateTransactionForDeveloperRequest: AccelerateTransactionForDeveloperRequest, options?: any): AxiosPromise<CreateDeveloperTransactionAccelerate200Response>;
    /**
     * Cancels a specified on-chain digital asset transfer from a developer-controlled wallet. Gas fees may still be incurred.
     * @summary Cancel a transaction
     * @param {string} id Transaction ID
     * @param {CancelTransactionForDeveloperRequest} cancelTransactionForDeveloperRequest Cancel transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionCancel(id: string, cancelTransactionForDeveloperRequest: CancelTransactionForDeveloperRequest, options?: any): AxiosPromise<CreateDeveloperTransactionCancel200Response>;
    /**
     * Creates a transaction which executes a smart contract. ABI parameters must be passed in the request.
     * @summary Create a contract execution transaction
     * @param {CreateContractExecutionTransactionForDeveloperRequest} createContractExecutionTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionContractExecution(createContractExecutionTransactionForDeveloperRequest: CreateContractExecutionTransactionForDeveloperRequest, options?: any): AxiosPromise<CreateDeveloperTransactionContractExecution200Response>;
    /**
     * Initiates an on-chain digital asset transfer from a specified developer-controlled wallet.
     * @summary Create a transfer transaction
     * @param {CreateTransferTransactionForDeveloperRequest} createTransferTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperTransactionTransfer(createTransferTransactionForDeveloperRequest: CreateTransferTransactionForDeveloperRequest, options?: any): AxiosPromise<CreateDeveloperTransactionTransfer200Response>;
    /**
     * Estimates gas fees that will be incurred for a contract execution transaction, given its ABI parameters and blockchain.
     * @summary Estimate fee for a contract execution transaction
     * @param {EstimateContractExecutionTransactionFeeRequest} estimateContractExecutionTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransactionEstimateFee(estimateContractExecutionTransactionFeeRequest: EstimateContractExecutionTransactionFeeRequest, options?: any): AxiosPromise<CreateTransferEstimateFee200Response>;
    /**
     * Estimates gas fees that will be incurred for a transfer transaction; given its amount, blockchain, and token.
     * @summary Estimate fee for a transfer transaction
     * @param {EstimateTransferTransactionFeeRequest} estimateTransferTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTransferEstimateFee(estimateTransferTransactionFeeRequest: EstimateTransferTransactionFeeRequest, options?: any): AxiosPromise<CreateTransferEstimateFee200Response>;
    /**
     * Confirms that a specified address is valid for a given token on a certain blockchain.
     * @summary Validate an address
     * @param {ValidateAddressRequest} validateAddressRequest Validate address request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createValidateAddress(validateAddressRequest: ValidateAddressRequest, options?: any): AxiosPromise<CreateValidateAddress200Response>;
    /**
     * Retrieves info for a single transaction using it\'s unique identifier.
     * @summary Get a transaction
     * @param {string} id Transaction id
     * @param {GetTransactionTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTransaction(id: string, txType?: GetTransactionTxTypeEnum, options?: any): AxiosPromise<GetTransaction200Response>;
    /**
     * Lists all transactions. Includes details such as status, source/destination, and transaction hash.
     * @summary List transactions
     * @param {ListTransactionsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {ListTransactionsCustodyTypeEnum} [custodyType] Filter by the custody type.
     * @param {string} [destinationAddress] Filter by the destination address.
     * @param {boolean} [includeAll]
     * @param {ListTransactionsOperationEnum} [operation] Filter by on the operation of the transaction.
     * @param {ListTransactionsStateEnum} [state] Filter by  the state of the transaction.
     * @param {string} [txHash] Filter on the transaction hash of the transaction.
     * @param {ListTransactionsTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {string} [walletIds] Filter by the wallet IDs of the transaction.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTransactions(blockchain?: ListTransactionsBlockchainEnum, custodyType?: ListTransactionsCustodyTypeEnum, destinationAddress?: string, includeAll?: boolean, operation?: ListTransactionsOperationEnum, state?: ListTransactionsStateEnum, txHash?: string, txType?: ListTransactionsTxTypeEnum, walletIds?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListTransactions200Response>;
};
/**
 * TransactionsApi - object-oriented interface
 * @export
 * @class TransactionsApi
 * @extends {BaseAPI}
 */
declare class TransactionsApi extends BaseAPI {
    /**
     * Accelerates a specified on-chain digital asset transfer from a developer-controlled wallet. Additional gas fees may be incurred.
     * @summary Accelerate a transaction
     * @param {string} id Transaction ID
     * @param {AccelerateTransactionForDeveloperRequest} accelerateTransactionForDeveloperRequest Accelerate transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createDeveloperTransactionAccelerate(id: string, accelerateTransactionForDeveloperRequest: AccelerateTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateDeveloperTransactionAccelerate200Response, any>>;
    /**
     * Cancels a specified on-chain digital asset transfer from a developer-controlled wallet. Gas fees may still be incurred.
     * @summary Cancel a transaction
     * @param {string} id Transaction ID
     * @param {CancelTransactionForDeveloperRequest} cancelTransactionForDeveloperRequest Cancel transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createDeveloperTransactionCancel(id: string, cancelTransactionForDeveloperRequest: CancelTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateDeveloperTransactionCancel200Response, any>>;
    /**
     * Creates a transaction which executes a smart contract. ABI parameters must be passed in the request.
     * @summary Create a contract execution transaction
     * @param {CreateContractExecutionTransactionForDeveloperRequest} createContractExecutionTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createDeveloperTransactionContractExecution(createContractExecutionTransactionForDeveloperRequest: CreateContractExecutionTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateDeveloperTransactionContractExecution200Response, any>>;
    /**
     * Initiates an on-chain digital asset transfer from a specified developer-controlled wallet.
     * @summary Create a transfer transaction
     * @param {CreateTransferTransactionForDeveloperRequest} createTransferTransactionForDeveloperRequest Create transaction for developer request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createDeveloperTransactionTransfer(createTransferTransactionForDeveloperRequest: CreateTransferTransactionForDeveloperRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateDeveloperTransactionTransfer200Response, any>>;
    /**
     * Estimates gas fees that will be incurred for a contract execution transaction, given its ABI parameters and blockchain.
     * @summary Estimate fee for a contract execution transaction
     * @param {EstimateContractExecutionTransactionFeeRequest} estimateContractExecutionTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createTransactionEstimateFee(estimateContractExecutionTransactionFeeRequest: EstimateContractExecutionTransactionFeeRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateTransferEstimateFee200Response, any>>;
    /**
     * Estimates gas fees that will be incurred for a transfer transaction; given its amount, blockchain, and token.
     * @summary Estimate fee for a transfer transaction
     * @param {EstimateTransferTransactionFeeRequest} estimateTransferTransactionFeeRequest Estimate transaction fee request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createTransferEstimateFee(estimateTransferTransactionFeeRequest: EstimateTransferTransactionFeeRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateTransferEstimateFee200Response, any>>;
    /**
     * Confirms that a specified address is valid for a given token on a certain blockchain.
     * @summary Validate an address
     * @param {ValidateAddressRequest} validateAddressRequest Validate address request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    createValidateAddress(validateAddressRequest: ValidateAddressRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateValidateAddress200Response, any>>;
    /**
     * Retrieves info for a single transaction using it\'s unique identifier.
     * @summary Get a transaction
     * @param {string} id Transaction id
     * @param {GetTransactionTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    getTransaction(id: string, txType?: GetTransactionTxTypeEnum, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<GetTransaction200Response, any>>;
    /**
     * Lists all transactions. Includes details such as status, source/destination, and transaction hash.
     * @summary List transactions
     * @param {ListTransactionsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {ListTransactionsCustodyTypeEnum} [custodyType] Filter by the custody type.
     * @param {string} [destinationAddress] Filter by the destination address.
     * @param {boolean} [includeAll]
     * @param {ListTransactionsOperationEnum} [operation] Filter by on the operation of the transaction.
     * @param {ListTransactionsStateEnum} [state] Filter by  the state of the transaction.
     * @param {string} [txHash] Filter on the transaction hash of the transaction.
     * @param {ListTransactionsTxTypeEnum} [txType] Filter by on the transaction type.
     * @param {string} [walletIds] Filter by the wallet IDs of the transaction.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TransactionsApi
     */
    listTransactions(blockchain?: ListTransactionsBlockchainEnum, custodyType?: ListTransactionsCustodyTypeEnum, destinationAddress?: string, includeAll?: boolean, operation?: ListTransactionsOperationEnum, state?: ListTransactionsStateEnum, txHash?: string, txType?: ListTransactionsTxTypeEnum, walletIds?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<ListTransactions200Response, any>>;
}
/**
 * @export
 */
declare const GetTransactionTxTypeEnum: {
    readonly Inbound: "INBOUND";
    readonly Outbound: "OUTBOUND";
};
type GetTransactionTxTypeEnum = typeof GetTransactionTxTypeEnum[keyof typeof GetTransactionTxTypeEnum];
/**
 * @export
 */
declare const ListTransactionsBlockchainEnum: {
    readonly Eth: "ETH";
    readonly EthGoerli: "ETH-GOERLI";
    readonly EthSepolia: "ETH-SEPOLIA";
    readonly Avax: "AVAX";
    readonly AvaxFuji: "AVAX-FUJI";
    readonly Matic: "MATIC";
    readonly MaticMumbai: "MATIC-MUMBAI";
};
type ListTransactionsBlockchainEnum = typeof ListTransactionsBlockchainEnum[keyof typeof ListTransactionsBlockchainEnum];
/**
 * @export
 */
declare const ListTransactionsCustodyTypeEnum: {
    readonly Developer: "DEVELOPER";
    readonly Enduser: "ENDUSER";
};
type ListTransactionsCustodyTypeEnum = typeof ListTransactionsCustodyTypeEnum[keyof typeof ListTransactionsCustodyTypeEnum];
/**
 * @export
 */
declare const ListTransactionsOperationEnum: {
    readonly Transfer: "TRANSFER";
    readonly ContractExecution: "CONTRACT_EXECUTION";
    readonly ContractDeployment: "CONTRACT_DEPLOYMENT";
};
type ListTransactionsOperationEnum = typeof ListTransactionsOperationEnum[keyof typeof ListTransactionsOperationEnum];
/**
 * @export
 */
declare const ListTransactionsStateEnum: {
    readonly Initiated: "INITIATED";
    readonly PendingRiskScreening: "PENDING_RISK_SCREENING";
    readonly Denied: "DENIED";
    readonly Queued: "QUEUED";
    readonly Sent: "SENT";
    readonly Confirmed: "CONFIRMED";
    readonly Completed: "COMPLETED";
    readonly Cancelled: "CANCELLED";
    readonly Failed: "FAILED";
};
type ListTransactionsStateEnum = typeof ListTransactionsStateEnum[keyof typeof ListTransactionsStateEnum];
/**
 * @export
 */
declare const ListTransactionsTxTypeEnum: {
    readonly Inbound: "INBOUND";
    readonly Outbound: "OUTBOUND";
};
type ListTransactionsTxTypeEnum = typeof ListTransactionsTxTypeEnum[keyof typeof ListTransactionsTxTypeEnum];

/**
 * WalletSetsApi - axios parameter creator
 * @export
 */
declare const WalletSetsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Generate a developer controlled wallet set.
     * @summary Create a new wallet set
     * @param {CreateDeveloperWalletSetRequest} createDeveloperWalletSetRequest WalletSet creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWalletSet: (createDeveloperWalletSetRequest: CreateDeveloperWalletSetRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retreive info for a single wallet set.
     * @summary Get a wallet set
     * @param {string} id WalletSet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletSet: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retreive a list of all wallet sets.
     * @summary List wallet sets
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletSets: (from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the wallet set associated with the given wallet set ID.
     * @summary Update a wallet set
     * @param {string} id WalletSet ID
     * @param {UpdateWalletSetMetadataRequest} updateWalletSetMetadataRequest Update walletSet metadata request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWalletSet: (id: string, updateWalletSetMetadataRequest: UpdateWalletSetMetadataRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WalletSetsApi - functional programming interface
 * @export
 */
declare const WalletSetsApiFp: (configuration?: Configuration) => {
    /**
     * Generate a developer controlled wallet set.
     * @summary Create a new wallet set
     * @param {CreateDeveloperWalletSetRequest} createDeveloperWalletSetRequest WalletSet creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWalletSet(createDeveloperWalletSetRequest: CreateDeveloperWalletSetRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateWalletSet200Response>>;
    /**
     * Retreive info for a single wallet set.
     * @summary Get a wallet set
     * @param {string} id WalletSet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletSet(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWalletSet200Response>>;
    /**
     * Retreive a list of all wallet sets.
     * @summary List wallet sets
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletSets(from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListWalletSets200Response>>;
    /**
     * Update the wallet set associated with the given wallet set ID.
     * @summary Update a wallet set
     * @param {string} id WalletSet ID
     * @param {UpdateWalletSetMetadataRequest} updateWalletSetMetadataRequest Update walletSet metadata request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWalletSet(id: string, updateWalletSetMetadataRequest: UpdateWalletSetMetadataRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateWalletSet200Response>>;
};
/**
 * WalletSetsApi - factory interface
 * @export
 */
declare const WalletSetsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Generate a developer controlled wallet set.
     * @summary Create a new wallet set
     * @param {CreateDeveloperWalletSetRequest} createDeveloperWalletSetRequest WalletSet creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createWalletSet(createDeveloperWalletSetRequest: CreateDeveloperWalletSetRequest, options?: any): AxiosPromise<CreateWalletSet200Response>;
    /**
     * Retreive info for a single wallet set.
     * @summary Get a wallet set
     * @param {string} id WalletSet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletSet(id: string, options?: any): AxiosPromise<GetWalletSet200Response>;
    /**
     * Retreive a list of all wallet sets.
     * @summary List wallet sets
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletSets(from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListWalletSets200Response>;
    /**
     * Update the wallet set associated with the given wallet set ID.
     * @summary Update a wallet set
     * @param {string} id WalletSet ID
     * @param {UpdateWalletSetMetadataRequest} updateWalletSetMetadataRequest Update walletSet metadata request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWalletSet(id: string, updateWalletSetMetadataRequest: UpdateWalletSetMetadataRequest, options?: any): AxiosPromise<UpdateWalletSet200Response>;
};
/**
 * WalletSetsApi - object-oriented interface
 * @export
 * @class WalletSetsApi
 * @extends {BaseAPI}
 */
declare class WalletSetsApi extends BaseAPI {
    /**
     * Generate a developer controlled wallet set.
     * @summary Create a new wallet set
     * @param {CreateDeveloperWalletSetRequest} createDeveloperWalletSetRequest WalletSet creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletSetsApi
     */
    createWalletSet(createDeveloperWalletSetRequest: CreateDeveloperWalletSetRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateWalletSet200Response, any>>;
    /**
     * Retreive info for a single wallet set.
     * @summary Get a wallet set
     * @param {string} id WalletSet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletSetsApi
     */
    getWalletSet(id: string, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<GetWalletSet200Response, any>>;
    /**
     * Retreive a list of all wallet sets.
     * @summary List wallet sets
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletSetsApi
     */
    listWalletSets(from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<ListWalletSets200Response, any>>;
    /**
     * Update the wallet set associated with the given wallet set ID.
     * @summary Update a wallet set
     * @param {string} id WalletSet ID
     * @param {UpdateWalletSetMetadataRequest} updateWalletSetMetadataRequest Update walletSet metadata request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletSetsApi
     */
    updateWalletSet(id: string, updateWalletSetMetadataRequest: UpdateWalletSetMetadataRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<UpdateWalletSet200Response, any>>;
}

/**
 * WalletsApi - axios parameter creator
 * @export
 */
declare const WalletsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Generates a new developer-controlled wallet or batch of wallets within a wallet set, specifying blockchain and wallet name.
     * @summary Create wallets
     * @param {CreateDeveloperWalletRequest} createDeveloperWalletRequest Wallets creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperWallet: (createDeveloperWalletRequest: CreateDeveloperWalletRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Get a wallet
     * @param {string} id Wallet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWallet: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the digital asset balance for a single developer-controlled wallet using its unique identifier.
     * @summary Get token balance for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletBallance: (id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches the info for all NFTs stored in a single developer-controlled wallet, using the wallets unique identifier.
     * @summary Get NFTs for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletNfts: (id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves a list of all developer-controlled wallets that fit the specified parameters.
     * @summary List wallets
     * @param {string} [address] Filter by the Address of the wallet.
     * @param {ListWalletsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {string} [walletSetId] Filter by the wallet set the wallet belongs to.
     * @param {string} [refId] Filter by the reference identifier set on the wallet.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWallets: (address?: string, blockchain?: ListWalletsBlockchainEnum, walletSetId?: string, refId?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Update a wallet
     * @param {string} id Wallet ID
     * @param {ExtUpdateWalletMetadataRequest} extUpdateWalletMetadataRequest Wallet metadata update request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWallet: (id: string, extUpdateWalletMetadataRequest: ExtUpdateWalletMetadataRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WalletsApi - functional programming interface
 * @export
 */
declare const WalletsApiFp: (configuration?: Configuration) => {
    /**
     * Generates a new developer-controlled wallet or batch of wallets within a wallet set, specifying blockchain and wallet name.
     * @summary Create wallets
     * @param {CreateDeveloperWalletRequest} createDeveloperWalletRequest Wallets creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperWallet(createDeveloperWalletRequest: CreateDeveloperWalletRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateDeveloperWallet200Response>>;
    /**
     * Retrieves info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Get a wallet
     * @param {string} id Wallet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWallet(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetWallet200Response>>;
    /**
     * Fetches the digital asset balance for a single developer-controlled wallet using its unique identifier.
     * @summary Get token balance for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletBallance(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListWalletBallance200Response>>;
    /**
     * Fetches the info for all NFTs stored in a single developer-controlled wallet, using the wallets unique identifier.
     * @summary Get NFTs for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletNfts(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListWalletNfts200Response>>;
    /**
     * Retrieves a list of all developer-controlled wallets that fit the specified parameters.
     * @summary List wallets
     * @param {string} [address] Filter by the Address of the wallet.
     * @param {ListWalletsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {string} [walletSetId] Filter by the wallet set the wallet belongs to.
     * @param {string} [refId] Filter by the reference identifier set on the wallet.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWallets(address?: string, blockchain?: ListWalletsBlockchainEnum, walletSetId?: string, refId?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListWallets200Response>>;
    /**
     * Updates info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Update a wallet
     * @param {string} id Wallet ID
     * @param {ExtUpdateWalletMetadataRequest} extUpdateWalletMetadataRequest Wallet metadata update request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWallet(id: string, extUpdateWalletMetadataRequest: ExtUpdateWalletMetadataRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateWallet200Response>>;
};
/**
 * WalletsApi - factory interface
 * @export
 */
declare const WalletsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Generates a new developer-controlled wallet or batch of wallets within a wallet set, specifying blockchain and wallet name.
     * @summary Create wallets
     * @param {CreateDeveloperWalletRequest} createDeveloperWalletRequest Wallets creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDeveloperWallet(createDeveloperWalletRequest: CreateDeveloperWalletRequest, options?: any): AxiosPromise<CreateDeveloperWallet200Response>;
    /**
     * Retrieves info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Get a wallet
     * @param {string} id Wallet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWallet(id: string, options?: any): AxiosPromise<GetWallet200Response>;
    /**
     * Fetches the digital asset balance for a single developer-controlled wallet using its unique identifier.
     * @summary Get token balance for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletBallance(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListWalletBallance200Response>;
    /**
     * Fetches the info for all NFTs stored in a single developer-controlled wallet, using the wallets unique identifier.
     * @summary Get NFTs for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWalletNfts(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListWalletNfts200Response>;
    /**
     * Retrieves a list of all developer-controlled wallets that fit the specified parameters.
     * @summary List wallets
     * @param {string} [address] Filter by the Address of the wallet.
     * @param {ListWalletsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {string} [walletSetId] Filter by the wallet set the wallet belongs to.
     * @param {string} [refId] Filter by the reference identifier set on the wallet.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listWallets(address?: string, blockchain?: ListWalletsBlockchainEnum, walletSetId?: string, refId?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListWallets200Response>;
    /**
     * Updates info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Update a wallet
     * @param {string} id Wallet ID
     * @param {ExtUpdateWalletMetadataRequest} extUpdateWalletMetadataRequest Wallet metadata update request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateWallet(id: string, extUpdateWalletMetadataRequest: ExtUpdateWalletMetadataRequest, options?: any): AxiosPromise<UpdateWallet200Response>;
};
/**
 * WalletsApi - object-oriented interface
 * @export
 * @class WalletsApi
 * @extends {BaseAPI}
 */
declare class WalletsApi extends BaseAPI {
    /**
     * Generates a new developer-controlled wallet or batch of wallets within a wallet set, specifying blockchain and wallet name.
     * @summary Create wallets
     * @param {CreateDeveloperWalletRequest} createDeveloperWalletRequest Wallets creation request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    createDeveloperWallet(createDeveloperWalletRequest: CreateDeveloperWalletRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<CreateDeveloperWallet200Response, any>>;
    /**
     * Retrieves info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Get a wallet
     * @param {string} id Wallet ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    getWallet(id: string, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<GetWallet200Response, any>>;
    /**
     * Fetches the digital asset balance for a single developer-controlled wallet using its unique identifier.
     * @summary Get token balance for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    listWalletBallance(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<ListWalletBallance200Response, any>>;
    /**
     * Fetches the info for all NFTs stored in a single developer-controlled wallet, using the wallets unique identifier.
     * @summary Get NFTs for a wallet
     * @param {string} id Wallet ID
     * @param {boolean} [includeAll]
     * @param {string} [name] Filter by token name.
     * @param {string} [tokenAddress] Filter by token addresses.
     * @param {string} [standard] Filter by the token standard.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    listWalletNfts(id: string, includeAll?: boolean, name?: string, tokenAddress?: string, standard?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<ListWalletNfts200Response, any>>;
    /**
     * Retrieves a list of all developer-controlled wallets that fit the specified parameters.
     * @summary List wallets
     * @param {string} [address] Filter by the Address of the wallet.
     * @param {ListWalletsBlockchainEnum} [blockchain] Filter by blockchain.
     * @param {string} [walletSetId] Filter by the wallet set the wallet belongs to.
     * @param {string} [refId] Filter by the reference identifier set on the wallet.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next n items before the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.   SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next n items after the id, with n being specified by pageSize.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither pageAfter nor pageBefore are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.   Some collections have a strict upper bound that will disregard this value. In case the specified value is higher  than the allowed limit, the collection limit will be used.   If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    listWallets(address?: string, blockchain?: ListWalletsBlockchainEnum, walletSetId?: string, refId?: string, from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<ListWallets200Response, any>>;
    /**
     * Updates info for a single developer-controlled wallet using it\'s unique identifier.
     * @summary Update a wallet
     * @param {string} id Wallet ID
     * @param {ExtUpdateWalletMetadataRequest} extUpdateWalletMetadataRequest Wallet metadata update request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WalletsApi
     */
    updateWallet(id: string, extUpdateWalletMetadataRequest: ExtUpdateWalletMetadataRequest, options?: AxiosRequestConfig): Promise<axios.AxiosResponse<UpdateWallet200Response, any>>;
}
/**
 * @export
 */
declare const ListWalletsBlockchainEnum: {
    readonly Eth: "ETH";
    readonly EthGoerli: "ETH-GOERLI";
    readonly EthSepolia: "ETH-SEPOLIA";
    readonly Avax: "AVAX";
    readonly AvaxFuji: "AVAX-FUJI";
    readonly Matic: "MATIC";
    readonly MaticMumbai: "MATIC-MUMBAI";
};
type ListWalletsBlockchainEnum = typeof ListWalletsBlockchainEnum[keyof typeof ListWalletsBlockchainEnum];

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface ClientConfig {
    /**
     * ApiKey that will be used to authenticate the request
     */
    apiKey: string;
    /**
     * Version of the client. Will be added to the user agent.
     */
    version: string;
    /**
     * Customized user agent. Will be added to the user agent.
     */
    userAgent?: string;
}
declare class DeveloperControlledWalletsClient {
    Signing: ReturnType<typeof SigningApiFactory>;
    TokenLookup: ReturnType<typeof TokenLookupApiFactory>;
    Transactions: ReturnType<typeof TransactionsApiFactory>;
    WalletSets: ReturnType<typeof WalletSetsApiFactory>;
    Wallets: ReturnType<typeof WalletsApiFactory>;
    constructor(baseUrl: string, config: ClientConfig);
}

export { type AccelerateTransactionForDeveloperRequest, type AccelerateTransactionForDeveloperResponse, AccountType, type Balance, Blockchain, type CancelTransactionForDeveloperRequest, type CancelTransactionForDeveloperResponse, type CreateContractExecutionTransactionForDeveloperRequest, type CreateContractExecutionTransactionForDeveloperResponse, type CreateDeveloperTransactionAccelerate200Response, type CreateDeveloperTransactionCancel200Response, type CreateDeveloperTransactionContractExecution200Response, type CreateDeveloperTransactionTransfer200Response, type CreateDeveloperWallet200Response, type CreateDeveloperWalletRequest, type CreateDeveloperWalletResponse, type CreateDeveloperWalletSetRequest, type CreateDeveloperWalletSetResponse, type CreateTransferEstimateFee200Response, type CreateTransferTransactionForDeveloperRequest, type CreateTransferTransactionForDeveloperResponse, type CreateValidateAddress200Response, type CreateWalletSet200Response, CustodyType, DeveloperControlledWalletsClient, type EstimateContractExecutionTransactionFeeRequest, type EstimateTransactionFeeResponse, type EstimateTransferTransactionFeeRequest, type EstimatedTransactionFee, type ExtGetAllWalletsResponse, type ExtGetWalletByIDResponse, type ExtUpdateWalletMetadataRequest, type ExtWalletResponse, type ExtWalletResponseWallet, FeeLevel, type GetBalancesResponse, type GetNftsResponse, type GetTokenByIDResponse, type GetTokenId200Response, type GetTransaction200Response, type GetTransactionByIDResponse, GetTransactionTxTypeEnum, type GetTransactionsResponse, type GetWallet200Response, type GetWalletSet200Response, type GetWalletSetByIDResponse, type GetWalletSetsResponse, type ListTransactions200Response, ListTransactionsBlockchainEnum, ListTransactionsCustodyTypeEnum, ListTransactionsOperationEnum, ListTransactionsStateEnum, ListTransactionsTxTypeEnum, type ListWalletBallance200Response, type ListWalletNfts200Response, type ListWalletSets200Response, type ListWallets200Response, ListWalletsBlockchainEnum, type ModelError, type Nft, Operation, type SignDeveloperMessage200Response, type SignDeveloperTypedData200Response, type SignMessageForDeveloperRequest, type SignMessageForDeveloperResponse, type SignTypedDataForDeveloperRequest, type SignTypedDataForDeveloperResponse, SigningApi, SigningApiAxiosParamCreator, SigningApiFactory, SigningApiFp, TokenLookupApi, TokenLookupApiAxiosParamCreator, TokenLookupApiFactory, TokenLookupApiFp, type TokenResponse, TokenStandard, type Transaction, TransactionState, TransactionType, TransactionsApi, TransactionsApiAxiosParamCreator, TransactionsApiFactory, TransactionsApiFp, type UpdateWallet200Response, type UpdateWalletSet200Response, type UpdateWalletSetMetadataRequest, type UpdateWalletSetMetadataResponse, type ValidateAddressRequest, type ValidateAddressResponse, type WalletMetadata, type WalletResponse, type WalletSetResponse, WalletSetsApi, WalletSetsApiAxiosParamCreator, WalletSetsApiFactory, WalletSetsApiFp, WalletState, WalletsApi, WalletsApiAxiosParamCreator, WalletsApiFactory, WalletsApiFp };
